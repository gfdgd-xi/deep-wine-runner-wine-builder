name: Building Wine 7z Package (termux)
run-name: ${{ github.actor }} Building Wine 7z Package (termux) 🚀
on:
  push:
  workflow_dispatch:
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    container: debian:bookworm
    steps:
      - name: Config Environment
        run: |
          cd ~
          # 配置源码源
          export DEBIAN_FRONTEND=noninteractive  # 防止卡 tzdate
          mkdir -p /etc/apt/sources.list.d/
          echo "deb-src http://deb.debian.org/debian bookworm main" > /etc/apt/sources.list.d/debian-sources.list
          # Debian 12 docker 默认没有 sudo
          apt update
          apt install sudo -y
          sudo apt update
          apt install jq python3.11-venv texinfo swig gperf openjdk-17-jdk git curl -y
          apt build-dep wine -y
          git clone https://github.com/gfdgd-xi/auto-building-wine
          git clone https://github.com/termux/termux-packages/
          version=`cat auto-building-wine/wine-version.txt`
          cd termux-packages
          # 修改版本号
          line=$(cat x11-packages/wine-stable/build.sh | grep TERMUX_PKG_VERSION=)
          sed -i "s/$line/TERMUX_PKG_VERSION=$version/g" x11-packages/wine-stable/build.sh
          sed -i "s/TERMUX_PKG_MAINTAINER=\"@termux\"/TERMUX_PKG_MAINTAINER=\"gfdgd xi\"/g" x11-packages/wine-stable/build.sh


          cat x11-packages/wine-stable/build.sh
          # 配置 sdk
          bash ./scripts/setup-android-sdk.sh
          # 正确配置 /data 权限
          sudo mkdir /data -p
          sudo chmod 777 -Rv /data
          #sudo chown runner:runner -Rv /data
      
      - name: Building Wine (x86_64)
        run: |
          cd ~/termux-packages
          bash ./build-package.sh -a x86_64 wine-stable

      - name: Pack Tar (x86_64)
        run: |
          cd ~/termux-packages/output
          tar -cvf ~/deb.tar *

      - name: upload result
        uses: actions/upload-artifact@v1
        with:
          name: deb
          path: /root/deb.tar

      