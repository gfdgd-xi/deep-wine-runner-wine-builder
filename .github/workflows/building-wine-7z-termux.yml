name: Building Wine 7z Package (termux)
run-name: ${{ github.actor }} Building Wine 7z Package (termux) 🚀
on:
  push:
  workflow_dispatch:
jobs:
  x86:
    runs-on: ubuntu-latest
    container: debian:bookworm
    steps:
      - name: Config Environment
        run: |
          cd ~
          # 配置源码源
          export DEBIAN_FRONTEND=noninteractive  # 防止卡 tzdate
          mkdir -p /etc/apt/sources.list.d/
          echo "deb-src http://deb.debian.org/debian bookworm main" > /etc/apt/sources.list.d/debian-sources.list
          # Debian 12 docker 默认没有 sudo
          apt update
          apt install sudo -y
          sudo dpkg --add-architecture i386  # 开始 32 位支持
          sudo apt update
          sudo apt install wget gpg python3-sphinx jq python3.11-venv texinfo swig gperf openjdk-17-jdk git curl -y
          apt build-dep wine -y
          sudo apt install flex bison gettext gcc gcc-multilib libasound2-dev libasound2-dev:i386 libpulse-dev libpulse-dev:i386 libdbus-1-dev libdbus-1-dev:i386 libfontconfig1-dev libfontconfig1-dev:i386 libfreetype6-dev libfreetype6-dev:i386 libgnutls28-dev libgnutls28-dev:i386 libjpeg62-turbo-dev libjpeg62-turbo-dev:i386 libpng-dev libpng-dev:i386 libtiff-dev libtiff-dev:i386 libgl-dev libgl-dev:i386 libunwind-dev libunwind-dev:i386 libx11-dev libx11-dev:i386 libxml2-dev libxml2-dev:i386 libxslt1-dev libxslt1-dev:i386 libgstreamer1.0-dev libgstreamer1.0-dev:i386 libgstreamer-plugins-base1.0-dev:i386 libmpg123-dev libmpg123-dev:i386 libosmesa6-dev libosmesa6-dev:i386 libudev-dev libudev-dev:i386 libvkd3d-dev libvkd3d-dev:i386 libvulkan-dev libvulkan-dev:i386 libcapi20-dev libcapi20-dev:i386 liblcms2-dev liblcms2-dev:i386 libcups2-dev libcups2-dev:i386 libgphoto2-dev libgphoto2-dev:i386 libsane-dev libsane-dev:i386 libgsm1-dev libgsm1-dev:i386 libkrb5-dev libkrb5-dev:i386 libldap2-dev libldap2-dev:i386 samba-dev ocl-icd-opencl-dev ocl-icd-opencl-dev:i386 libpcap-dev libpcap-dev:i386 libusb-1.0-0-dev libusb-1.0-0-dev:i386 libv4l-dev libv4l-dev:i386 libopenal-dev libopenal-dev:i386 libxcomposite-dev libxcomposite-dev:i386 libxcursor-dev libxcursor-dev:i386 libxi-dev libxi-dev:i386 libxrandr-dev libxrandr-dev:i386 libxinerama-dev libxinerama-dev:i386 -y
          sudo apt install flex:i386 bison:i386 libfreetype6-dev:i386 libjpeg-dev:i386 libpng-dev:i386 libxslt1-dev:i386 libxml2-dev:i386 libxrender-dev:i386 libgl1-mesa-dev:i386 libglu1-mesa-dev:i386 freeglut3-dev:i386 libasound2-dev:i386 g++-multilib gcc-multilib g++-multilib -y
          git clone https://github.com/gfdgd-xi/auto-building-wine
          git clone https://github.com/termux/termux-packages/
          version=`cat auto-building-wine/wine-version.txt`
          url=`cat auto-building-wine/wine-url.txt`
          sudo cp auto-building-wine/loadpatch.py / -rv
          cd termux-packages
          # 修改版本号
          line=$(cat x11-packages/wine-stable/build.sh | grep TERMUX_PKG_VERSION=)
          sed -i "s/$line/TERMUX_PKG_VERSION=$version/g" x11-packages/wine-stable/build.sh
          line=$(cat x11-packages/wine-stable/build.sh | grep TERMUX_PKG_SRCURL=)
          sed -i "s%$line%TERMUX_PKG_SRCURL=$url%g" x11-packages/wine-stable/build.sh
          sed -i "s/TERMUX_PKG_MAINTAINER=\"@termux\"/TERMUX_PKG_MAINTAINER=\"gfdgd xi\"/g" x11-packages/wine-stable/build.sh
          rm x11-packages/wine-stable/*.patch* -rfv  # 移除补丁
          # 获取 Wine 的 sha256 值
          wget $url
          sha256Value=$(sha256sum wine-*.tar.xz | awk '{print $1}')
          line=$(cat x11-packages/wine-stable/build.sh | grep TERMUX_PKG_SHA256=)
          sed -i "s/$line/TERMUX_PKG_SHA256=$sha256Value/g" x11-packages/wine-stable/build.sh
          # 生效补丁
          sed -i "s%LDFLAGS+=%python3 /loadpatch.py; LDFLAGS+=%g" x11-packages/wine-stable/build.sh
          # 关闭测试项
          sed -i "s/--disable-tests//g" x11-packages/wine-stable/build.sh

          cat x11-packages/wine-stable/build.sh
          # 配置 sdk
          bash ./scripts/setup-android-sdk.sh
          # 正确配置 /data 权限
          sudo mkdir /data -p
          sudo chmod 777 -Rv /data
          #sudo chown runner:runner -Rv /data
      
      - name: Building Wine (x86_64)
        run: |
          cd ~/termux-packages
          bash ./build-package.sh -a x86_64 -i wine-stable

      - name: Pack Tar (x86_64)
        run: |
          cd ~/termux-packages/output
          tar -cvf ~/deb.tar *

      - name: upload result
        uses: actions/upload-artifact@v2
        with:
          name: deb
          path: /root/deb.tar

  arm:
    runs-on: ubuntu-latest
    container: debian:bookworm
    steps:
      - name: Config Environment
        run: |
          cd ~
          # 配置源码源
          export DEBIAN_FRONTEND=noninteractive  # 防止卡 tzdate
          mkdir -p /etc/apt/sources.list.d/
          echo "deb-src http://deb.debian.org/debian bookworm main" > /etc/apt/sources.list.d/debian-sources.list
          # Debian 12 docker 默认没有 sudo
          apt update
          apt install sudo -y
          sudo dpkg --add-architecture i386  # 开始 32 位支持
          sudo apt update
          sudo apt install wget gpg python3-sphinx jq python3.11-venv texinfo swig gperf openjdk-17-jdk git curl -y
          apt build-dep wine -y
          sudo apt install flex bison gettext gcc gcc-multilib libasound2-dev libasound2-dev:i386 libpulse-dev libpulse-dev:i386 libdbus-1-dev libdbus-1-dev:i386 libfontconfig1-dev libfontconfig1-dev:i386 libfreetype6-dev libfreetype6-dev:i386 libgnutls28-dev libgnutls28-dev:i386 libjpeg62-turbo-dev libjpeg62-turbo-dev:i386 libpng-dev libpng-dev:i386 libtiff-dev libtiff-dev:i386 libgl-dev libgl-dev:i386 libunwind-dev libunwind-dev:i386 libx11-dev libx11-dev:i386 libxml2-dev libxml2-dev:i386 libxslt1-dev libxslt1-dev:i386 libgstreamer1.0-dev libgstreamer1.0-dev:i386 libgstreamer-plugins-base1.0-dev:i386 libmpg123-dev libmpg123-dev:i386 libosmesa6-dev libosmesa6-dev:i386 libudev-dev libudev-dev:i386 libvkd3d-dev libvkd3d-dev:i386 libvulkan-dev libvulkan-dev:i386 libcapi20-dev libcapi20-dev:i386 liblcms2-dev liblcms2-dev:i386 libcups2-dev libcups2-dev:i386 libgphoto2-dev libgphoto2-dev:i386 libsane-dev libsane-dev:i386 libgsm1-dev libgsm1-dev:i386 libkrb5-dev libkrb5-dev:i386 libldap2-dev libldap2-dev:i386 samba-dev ocl-icd-opencl-dev ocl-icd-opencl-dev:i386 libpcap-dev libpcap-dev:i386 libusb-1.0-0-dev libusb-1.0-0-dev:i386 libv4l-dev libv4l-dev:i386 libopenal-dev libopenal-dev:i386 libxcomposite-dev libxcomposite-dev:i386 libxcursor-dev libxcursor-dev:i386 libxi-dev libxi-dev:i386 libxrandr-dev libxrandr-dev:i386 libxinerama-dev libxinerama-dev:i386 -y
          sudo apt install flex:i386 bison:i386 libfreetype6-dev:i386 libjpeg-dev:i386 libpng-dev:i386 libxslt1-dev:i386 libxml2-dev:i386 libxrender-dev:i386 libgl1-mesa-dev:i386 libglu1-mesa-dev:i386 freeglut3-dev:i386 libasound2-dev:i386 g++-multilib gcc-multilib g++-multilib -y
          git clone https://github.com/gfdgd-xi/auto-building-wine
          git clone https://github.com/termux/termux-packages/
          version=`cat auto-building-wine/wine-version.txt`
          url=`cat auto-building-wine/wine-url.txt`
          sudo cp auto-building-wine/loadpatch.py / -rv
          cd termux-packages
          # 修改版本号
          line=$(cat x11-packages/wine-stable/build.sh | grep TERMUX_PKG_VERSION=)
          sed -i "s/$line/TERMUX_PKG_VERSION=$version/g" x11-packages/wine-stable/build.sh
          line=$(cat x11-packages/wine-stable/build.sh | grep TERMUX_PKG_SRCURL=)
          sed -i "s%$line%TERMUX_PKG_SRCURL=$url%g" x11-packages/wine-stable/build.sh
          sed -i "s/TERMUX_PKG_MAINTAINER=\"@termux\"/TERMUX_PKG_MAINTAINER=\"gfdgd xi\"/g" x11-packages/wine-stable/build.sh
          rm x11-packages/wine-stable/*.patch* -rfv  # 移除补丁
          # 获取 Wine 的 sha256 值
          wget $url
          sha256Value=$(sha256sum wine-*.tar.xz | awk '{print $1}')
          line=$(cat x11-packages/wine-stable/build.sh | grep TERMUX_PKG_SHA256=)
          sed -i "s/$line/TERMUX_PKG_SHA256=$sha256Value/g" x11-packages/wine-stable/build.sh
          # 生效补丁
          sed -i "s%LDFLAGS+=%python3 /loadpatch.py; LDFLAGS+=%g" x11-packages/wine-stable/build.sh
          # 关闭测试项
          sed -i "s/--disable-tests//g" x11-packages/wine-stable/build.sh

          cat x11-packages/wine-stable/build.sh
          # 配置 sdk
          bash ./scripts/setup-android-sdk.sh
          # 正确配置 /data 权限
          sudo mkdir /data -p
          sudo chmod 777 -Rv /data
          #sudo chown runner:runner -Rv /data
      
      - name: Building Wine (aarch64)
        run: |
          cd ~/termux-packages
          bash ./build-package.sh -a aarch64 -i wine-stable

      - name: Pack Tar (aarch64)
        run: |
          cd ~/termux-packages/output
          tar -cvf ~/deb.tar *

      - name: upload result
        uses: actions/upload-artifact@v2
        with:
          name: deb-aarch64
          path: /root/deb.tar
      